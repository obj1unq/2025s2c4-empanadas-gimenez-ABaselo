import empleados.*

//test unitario
describe "Galvan" {
  test "el sueldo de Galvan arranca en 15000"{

    assert.equals(15000,galvan.sueldo())
  }

  

  test "le cambio el sueldo a Galvan" {
    galvan.sueldo(20000)
    assert.equals(galvan.sueldo(), 20000
    )
  }

}
//test unitario
describe "Baigorria" {
  test "baigorria" {
    baigorria.vender(500)
    assert.equals(500*15, baigorria.sueldo())
  }
  test "verder empanadas"{
    baigorria.vender(500)
    baigorria.vender(300)
    assert.equals(baigorria.sueldo(), 4500)

  }
}
//test unitario
describe "Gimenez" {
  test "Arranca con 300000" {
    assert.equals(300000, gimenez.fondo())
  }

}
//test integrador
describe "test integrador" {
  test "pagar sueldos" {
    gimenez.pagarSueldo(baigorria)
    gimenez.pagarSueldo(galvan)
    assert.equals(285000, gimenez.fondo())

  }
}


describe "prueba galvean" {
  test "description" {
  /*  
    galvan.deuda(3000)
    gimenez.pagarSueldo(galvan)
    galvan.gastar(12000)   // ✅ esta línea es clave

    assert.equals(0, galvan.dinero())
*/ 
   assert.equals(0, galvan.deuda()) 	
   assert.equals(0, galvan.dinero()) 	
   assert.equals(15000, galvan.sueldo()) 	
    galvan.gastar(4000)
   assert.equals(4000, galvan.deuda()) 	
   assert.equals(0, galvan.dinero()) 
   	galvan.gastar(8000)
   assert.equals(12000, galvan.deuda()) 	
   assert.equals(0, galvan.dinero()) 	
   gimenez.pagarSueldo(galvan)  
   assert.equals(0, galvan.deuda()) 	
   assert.equals(3000, galvan.dinero()) 
  }
}

/*
describe "prueba del discribe" {
  method initialize() {
  baigorria.vender(500)
  galvan.sueldo(20000)
  baigorria.vender(300)
  }// setup
  test "Punto 1.A vetas del local" {
  
  assert.equals(12000, baigorria.sueldo())
  assert.equals(20000, galvan.sueldo())
  }

  test "Punto 1.B pagar sueldos mensuales" {
  gimenez.pagarSueldo(baigorria)
  gimenez.pagarSueldo(galvan)
  assert.equals(268000, gimenez.fondo())
    
  }
}


test "punto1: Planteo inicial" {

  baigorria.vender(500)
  galvan.sueldo(20000)
  baigorria.vender(300)
  assert.equals(12000, baigorria.sueldo())
  assert.equals(20000, galvan.sueldo())
  
  gimenez.pagarSueldo(baigorria)
  gimenez.pagarSueldo(galvan)
  assert.equals(268000, gimenez.fondo())
  
}
*/
